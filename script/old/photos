#!/usr/bin/zsh

while true;
do
	case "$1" in
		-- ) shift; break ;;
		--phone ) shift; PHONE=1 ;;
		--xavier ) shift; XAVIER=1 ;;
		--gopro ) shift; GOPRO=1 ;;
		*) break;;
	esac
done

PHOTODIR=$1
[[ -z $PHOTODIR ]] && PHOTODIR=$(pwd)
[[ -d $PHOTODIR ]] || mkdir -p $PHOTODIR || exit 1

msg() {
	echo "# Photos: $NEXT to $LAST"
	echo "# Videos: $NEXTVID to $LASTVID"
	echo "# Dir: $PHOTODIR (press a key to continue)"
	read a
}
updatecur() {
	echo "#$PHOTODIR ($(date --iso-8601=seconds))" >> $CURFILE
	echo "CURRENT=$LAST\nCURVID=$LASTVID" >> $CURFILE
}
transfert() {
	rsync -vazP "$@"
}
missing() {
	[[ -z $LAST ]] && LAST=$CURRENT
	[[ -z $LASTVID ]] && LASTVID=$CURVID
}

if [[ -n $PHONE ]]; then #get photos from phone
	#Copy using pcmanfm the DCIM folder to /tmp
	#Or use ssh helper:
	#  md /tmp/DCIM/Camera; cd /tmp/DCIM/Camera
	#  ssh samsung ls /storage/extSdCard/DCIM/Camera/
	#  transfert samsung:/storage/extSdCard/DCIM/Camera/20150{7,8}\* .
	#  CAMERAPHOTO="/tmp/DCIM/Camera"
	#Or use gvfs:
	#gvfs-mount -li
	#gvfs-mount 'mtp://[usb:001,030]/'
	#CAMERAPHOTO="$HOME/.gvfs/mtp:host=%5Busb%3A001%2C056%5D/Card/DCIM/Camera"
	CAMERAPHOTO="$HOME/.gvfs/mtp:host=%5Busb%3A001%2C030%5D/Card/DCIM/Camera"
	CAMERAVIDEOS=$CAMERAPHOTO
	CURFILE="$HOME/Photos/Photos_de_Damien/SamsungGalaxyS3Mini/00current"
	. $CURFILE

	NEXT=$CURRENT
	NEXTVID=$CURVID
	LAST=$(basename "$(ls $CAMERAPHOTO/*.jpg | tail -n 1)")
	LASTVID=$(basename "$(ls $CAMERAVIDEOS/*.mp4 | tail -n 1)")
	missing
	msg

	TOTRANSFERT=()
	for photo in $CAMERAPHOTO/*.jpg(N); do
		if [[ "$(basename "$photo")" > $NEXT ]]; then
			TOTRANSFERT+=$photo
		fi
	done
	if [[ -d $CAMERAVIDEOS ]]; then #sometimes I erase the videos
	for video in $CAMERAVIDEOS/*.mp4(N); do
		if [[ "$(basename "$video")" > $NEXTVID ]]; then
			TOTRANSFERT+=$video
		fi
	done
	fi

	[[ -n $TOTRANSFERT ]] && transfert $TOTRANSFERT $PHOTODIR
	updatecur
	exit 0
fi

function photonum() {
	local name
	name=$1
	name=${name#P} #remove '^P'
	name=${name%.JPG} #remove '.JPG$'
	name=${name%.RW2} #in case it was an RW2
	echo $name
}

UUID="9016-4EF8"
[[ -n $XAVIER ]] && UUID="F84E-1690"
[[ -n $GOPRO ]] && UUID="3331-3738"
CAMERADIR="$HOME/media/$UUID"
if [[ ! -d $CAMERADIR ]]; then
	MOUNTDISK=$(findfs "UUID=$UUID")
	MOUNTTARGET=$CAMERADIR
	[[ -n $MOUNTDISK ]] || exit 1
	MOUNTMODE="udisk"
	. ~/script/lib/mount_dir
	do_mount
fi
[[ -d $CAMERADIR ]] || exit 1

CAMERAPHOTO=$CAMERADIR/DCIM
CAMERAVIDEOS=$CAMERADIR/PRIVATE/AVCHD/BDMV

CURFILE=$HOME/Photos/Photos_de_Damien/Lumix_LF1/00current
[[ -n $XAVIER ]] && CURFILE=$HOME/Photos/Photos_de_Blandine/00current
[[ -n $GOPRO ]] && CURFILE=$HOME/Photos/Photos_de_Damien/GoPro/00current

. $CURFILE

if [[ -n $GOPRO ]]; then
	TOTRANSFERT=()
	for file in $CAMERADIR/DCIM/*/*(.); do
		filedate=$(stat --printf=%Y $file) #time of last modif, seconds since Epoch
		if [[ $filedate -gt $CURDATE ]]; then
			TOTRANSFERT+=$file
		fi
	done
	echo "Last backup: $CURDATE"
	echo "To transfert: $TOTRANSFERT"
	read a
	transfert $TOTRANSFERT $PHOTODIR
	echo "#$PHOTODIR ($(date --iso-8601=seconds))" >> $CURFILE
	echo "CURDATE=$(date +%s)" >> $CURFILE #seconds since Epoch
	exit 0
fi

NEXT=$(($CURRENT+1))
NEXTVID=$(($CURVID+1))
NEXTVID=$(printf %05d $NEXTVID)
LAST=$(ls $CAMERAPHOTO/*_PANA | tail -n 1)
LAST=$(basename $LAST)
[[ -n $LAST ]] && LAST=$(photonum $LAST)
LASTVID=$(ls $CAMERAVIDEOS/STREAM | tail -n 1)
[[ -n $LASTVID ]] && LASTVID=$(basename $LASTVID)
LASTVID=${LASTVID%.MTS}
missing
msg

if [[ $NEXT -le $LAST ]]; then
	echo "# Copying photos"
	transfert $CAMERAPHOTO/*_PANA/P{$NEXT..$LAST}.{JPG,RW2}(N) $PHOTODIR
fi
if [[ $NEXTVID -le $LASTVID ]]; then
	echo "# Copying videos"
	transfert $CAMERAVIDEOS/STREAM/{$NEXTVID..$LASTVID}.MTS(N) $PHOTODIR
	transfert $CAMERAVIDEOS/CLIPINF/{$NEXTVID..$LASTVID}.CPI(N) $PHOTODIR
fi
updatecur

if [[ -n $DID_MOUNT ]]; then
	do_umount
else
	echo "# umount $CAMERADIR"
fi
