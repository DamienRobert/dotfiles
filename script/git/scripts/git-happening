#!/bin/zsh

# Adapted from git-aliae https://github.com/ConradIrwin/git-aliae
# A little script to show you who's working on what.
# Prints out a list of branches on 'origin' (or the remote you name)
#
# For each branch shows you who last committed to it, and when.
#
# It first prints branches that have already been merged into master (in pink),
# and then branches that have not yet been merged (in green).
#
# I find it useful to go around and garbage collect the merged branches from
# time to time.

remote=${1:-origin}
cur=$(git current-branch -a)

show() {
  format="* $open${branch#remotes/$remote/}$close: %Cgreen%cr %C(bold blue)<%aN>%Creset %s"
  git --no-pager log -1 --format=$format $branch
}

list() {
	git branch --format='%(refname)' $@
}

for branch in $(list -a --merged $cur)
do
    open="%C(magenta)"
    close="%Creset"
		show
done

for branch in $(list --no-merged $cur)
do
    open="%C(red)"
    close="%Creset"
		show
done
