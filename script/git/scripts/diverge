#!/bin/zsh

upstream=${1:-master}; topic=${2:-HEAD};
echo "First point of diverge between $upstream and $topic using graph topology:"
diff \
     <( git rev-list "$upstream" --reverse --topo-order ) \
     <( git rev-list "$topic" --reverse --topo-order) \
       --unified=1 | sed -ne 's/^ //p' | head -1

find_merge ()
{
    local selection extra
    test "$2" && extra=" into $2"
    shift; shift
    git rev-list --min-parents=2 --grep="Merge branch '$1'$extra" --topo-order ${@:---all} | tail -1
}

branch_point ()
{
    local first_merge second_merge merge
    first_merge=$(find_merge $1 "" $1 $2)
    second_merge=$(find_merge $2 $1 $first_merge)
    merge=${second_merge:-$first_merge}

    if [ "$merge" ]; then
        git merge-base $merge^1 $merge^2
    else
        git merge-base $1 $2
    fi
}

echo "First point of diverge between $upstream and $topic using merge commit messages:"
branch_point $upstream $topic
