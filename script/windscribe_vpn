#!/bin/zsh

dev=$1
netns=${netns-ns1}
veth=${veth-"v-eth1"}
vpeer=${veth-"v-peer1"}
host_ip=${host_ip-"10.200.1.1"}
peer_ip=${peer_ip-"10.200.1.2"}
mask={$mask-24}

if [[ -z $dev ]]; then
	. $HOME/.initvars
	LIBSCRIPT=$MYFILES/script/lib/
	. $LIBSCRIPT/find_dev.zsh

	find_netdevs
	dev=$netdevs_wlan[1]
fi

sudo ip netns add $netns

## Set up veth

# Create veth link.
sudo ip link add $veth type veth peer name $vpeer

# Add peer-1 to NS.
sudo ip link set $vpeer netns $netns

# Setup IP address of v-eth1.
sudo ip addr add $host_ip/$mask dev $veth
sudo ip link set $veth up

# Setup IP address of v-peer1.
sudo ip netns exec $netns ip addr add $peer_ip/$mask dev $vpeer
sudo ip netns exec $netns ip link set $vpeer up
sudo ip netns exec $netns ip link set lo up

# Routing
sudo ip netns exec $netns ip route add default via $host_ip

## Share internet access between host and NS.

# Enable IP-forwarding.
sudo sysctl net.ipv4.ip_forward=1

# Nat
sudo nft add table ip nat
sudo nft add chain ip nat prerouting { type nat hook prerouting priority 0 \; }
sudo nft add chain ip nat postrouting { type nat hook postrouting priority 100 \; }
sudo nft add rule nat postrouting oifname $dev ip saddr $peer_ip/$mask counter masquerade

# Forwarding
sudo add table ip filter
sudo nft add chain inet filter forward { type filter hook forward priority 0 \; policy drop}
sudo nft add rule filter forward iifname $dev oifname $veth ct state related,established counter accept
sudo nft add rule filter forward iifname $veth oifname $dev counter accept

# sudo ip netns exec $netns su $USER
# /usr/bin/windscribe start
# windscribe connect
