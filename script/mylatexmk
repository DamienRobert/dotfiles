#!/bin/zsh
use_latexmk=t
renderer="pdflatex"
synctex=
bib8=
once=
aux=

OPTS=()
while true;
do
	case "$1" in
		-- ) break ;;
		--plain ) shift; use_latexmk= ;;
		--pdf ) shift; renderer='pdflatex' ;;
		--lua ) shift; renderer='lualatex'; OPTS+=(-lualatex) ;;
		--xetex ) shift; renderer='xetex'; OPTS+=(-xelatex) ;;
		--synctex ) shift; synctex='true' ;;
		--bib8 ) shift; bib8=t; OPTS+=($OPTS -bibtex="bibtex8 --wolfgang %O %S") ;;
		--aux ) shift; aux=t ;; #for latex suite (but i have a patch in latex-suite that don't need this option)
		--once ) shift;  once=t ;;
		--out ) shift; out=t ;; #at imb latexmk is too old to understand $out_dir
		*) break;;
	esac
done


if [[ -n $use_latexmk ]]; then
	echo "latexmk '$OPTS' $@"
	exec latexmk $OPTS "$@"
else
	latexcmd="$renderer -file-line-error"
	[[ -n $out ]] && latexcmd+=" -output-directory out/"
	[[ -n $synctex ]] && latexcmd+=" -synctex=1"
	[[ -n $use_latexmk ]] && latexcmd="$latexcmd %O %S; cp %D ."
	[[ -n $synctex ]] && latexcmd+="; ln -snf %Z%R.synctex.gz ."
	[[ -n $aux ]] && latexcmd+="; ln -s out/*.aux ."
	[[ -n $once ]] && latexcmd+="; exit 1"

	echo $latexcmd "$@"
	mkdir -p out
	if [[ -z $bibtex ]]; then
		eval "$latexcmd $@" && cp out/*.pdf .
	else
		eval "$latexcmd $@"
		#TODO: support bibtex8/biber!
		[[ -n $bibtex ]] && bibtex out/${1%.tex}
		eval "$latexcmd $@" && cp out/*.pdf .
	fi
fi
