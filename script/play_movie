#!/bin/zsh

help() {
	echo "play_movie: play a movie :)
	play_movie [-play] SEASON EPI SUBSEASON SUBEPI
play_movie -rename season number_of_subtiles: rename the subtitles to match the name of the movies

OPTIONS:
	-ss: set subtitle separation
	-ms: set movie separation
	-bs: set both separation
	-glob: enable global separation (ie use *)
	-go: select first movie/sub available
	-replay: replay intermediate file (or write it the first time)
	-subformat: format subtitles with subtitle_format.rb
"
	exit 1
}

SUBSEP=
MOVIESEP=
GLOBSEP=
REPLAY=
GO=
FORMATSUB=
SUBFOLDER="sub/"
#Sourced: EPI, SUBEPI (use SUBEPI=NONE when the sub is already in the mkv)

rename=
while true;
do
	case "$1" in
		-- ) break ;;
		-h|-help|--help )  help ;;
		-ss ) shift ; SUBSEP="$1"; shift ;;
		-ms ) shift ; MOVIESEP="$1"; shift ;;
		-bs ) shift; SUBSEP="$1"; MOVIESEP="$1"; shift ;;
		-glob ) shift; GLOBSEP="true";;
		-replay ) shift; REPLAY="true";;
		-g|-go ) shift; GO="true";;
		-subformat|--subtitle-format ) shift; FORMATSUB="true";;
		-rename ) shift; rename=true ;;
		*) break;;
	esac
done

handle() {
	ipath=$1
	msg=$2

	if [[ -n $rename || -n $GO ]]; then
		break;
	else
		echo "$msg: $ipath (y/n)"
		read a;
		if [[ $a != "n" ]]; then break; fi
	fi
}

newep() {
	CUREP=$1
	NEWEP=$(($CUREP+1))
	printf "%0${#CUREP}d\n" $NEWEP
}

find_files() {
	SEASON=$1
	EPI=$2
	SUBSEASON=$3
	SUBEPI=$4
	echo "Season: $SEASON$MOVIESEP; Episode: $EPI, Subseason: $SUBSEASON$SUBSEP, Subepi: $SUBEPI"
	MOVIETYPE="avi,mkv,mp4,ogm"
	if [[ -n $GLOBSEP ]]; then #glob separation
		MOVIEGLOB="*$SEASON$MOVIESEP*$EPI*"
		SUBGLOB="*$SUBSEASON$SUBSEP*$SUBEPI*"
	else
		MOVIEGLOB="*$SEASON$MOVIESEP$EPI*"
		SUBGLOB="*$SUBSEASON$SUBSEP$SUBEPI*"
	fi
	MOVIES=($~MOVIEGLOB.{avi,mkv,mp4,ogm}(N))
	SUBS=({$SUBFOLDER,}$~SUBGLOB.{srt,ass,sub}(N))
	echo "------ Movie: $SEASON$MOVIESEP$EPI ------"
	echo ${(j:|:)MOVIES}
	for MOVIE in $MOVIES; do
		handle $MOVIE "Movie"
	done
	if [[ $SUBEPI != "NONE" ]]; then
		echo "------ Subtitle: $SUBSEASON$SUBSEP$SUBEPI  ------"
		echo ${(j:|:)SUBS}
		for SUB in $SUBS; do
			handle $SUB "Subtitle"
		done
	fi
}

launch_movie() {
	find_files "$SEASON" "$EPI" "$SUBSEASON" "$SUBEPI"
	if [[ -n $FORMATSUB && -n $SUB ]]; then
		SUBF="${SUB:r}.formated.${SUB:e}"
		echo "## Formatting $SUB into $SUBF"
		~/mine/script/subtitle_format.rb "$SUB" >! "$SUBF"
		SUB=$SUBF
	fi
	COMMAND=(mpl)
	if [[ -n $SUB ]]; then
		COMMAND=($COMMAND --sub $SUB)
	fi
	COMMAND=($COMMAND $MOVIE)
}

if [[ -n $rename ]]; then
	SUBTITLECHANGE="0Asubrename"
	SEASON=$1
	EPIS=$2
	for (( EPI=1; EPI<$EPIS; EPI+ )); do
		if [[ ${#EPI} -eq 1 ]]; then EPI="0$EPI"; fi
		find_files "$SEASON" "$EPI" "$SUBSEASON" "$SUBEPI"
		NEWSUB=${MOVIE%.*}.srt
		COMMAND="cp \"$SUB\" \"$NEWSUB\""
		echo "$COMMAND" >>$SUBTITLECHANGE
	done
	echo ". .$SUBTITLECHANGE".

else
	case $# in
		0 ) FILE="00Epi" ;;
		1 ) FILE="$1" ;;
		2 ) SEASON=$1; EPI=$2 ;;
		3 ) SEASON=$1; EPI=$2; SUBEPI=$3 ;;
		4 ) SEASON=$1; EPI=$2; SUBSEASON=$3; SUBEPI=$4 ;;
	esac
	if [[ -n $FILE ]]; then . "./$FILE"; fi
	if [[ -z $SUBEPI ]]; then
		SUBEPI=$EPI
	else
		[[ $SUBEPI != "NONE" ]] && WRITESUBEPI=t
	fi
	[[ -z $SUBSEASON ]] && SUBSEASON=$SEASON
	[[ -z $SUBSEP ]] && SUBSEP=$MOVIESEP

	if [[ -n $REPLAY ]]; then
		PLAYMOVIEFILE=".${SEASON}x${EPI}"
		if [[ ! -f $PLAYMOVIEFILE ]]; then
			launch_movie
			echo $COMMAND >$PLAYMOVIEFILE
		fi
		echo "-> Will play $PLAYMOVIEFILE (press a key to continue):";
		cat "$PLAYMOVIEFILE"
		[[ -n $GO ]] || read a
		. "./$PLAYMOVIEFILE"
	else
		launch_movie
		echo "-> Will launch: $COMMAND (press a key to continue)"
		[[ -n $GO ]] || read a
		$COMMAND
	fi

	if [[ -n $FILE ]]; then
		NEWEPI=$(newep $EPI)
		echo "EPI=$NEWEPI" >> $FILE
		if [[ -n $WRITESUBEPI ]]; then
			NEWSUBEPI=$(newep $SUBEPI)
			echo "SUBEPI=$NEWSUBEPI" >> $FILE
		fi
		echo "*** Updating $FILE:"
		tail -n3 $FILE
	fi
fi
