# vim: ft=tmux

## Options
set -sg escape-time 5
set -ga update-environment " GPG_AGENT_INFO SHELL"
set -g default-terminal "tmux-256color"
set -g history-limit 10000
set -g base-index 1
setw -g pane-base-index 1
set -g display-time 2000
set -g display-panes-time 1000
set -g bell-action current
set -g status-keys emacs
set -g visual-bell on
#On status, bell -> !, activity -> #, silence -> ~, content -> +
#set -g visual-activity on
#set -g visual-content on
#set -g visual-silence on

## Layout
set -g status-bg black
set -g status-fg white
set -g status-right "[#{=20:pane_title}] %H:%M" # %d-%b-%y
setw -g window-status-current-style bg=red
#set-window-option -g automatic-rename off

### Mouse
setw -g xterm-keys on
setw -g mouse on

### Titles
set -g set-titles on
set -g set-titles-string "tmux@#H:#S (#W|#T) [#D|#I:#P]"

#  #(shell-command)  First line of the command's output
#  #[attributes]     Colour or attribute change
#  #H                Hostname of local host
#  #h                Hostname of local host without the domain name
#  #F                Current window flag
#  #I                Current window index
#  #D                Current pane unique identifier (ie %numéro de création)
#  #P                Current pane index (in current window)
#  #S                Session name
#  #T                Current pane title #ie hardstatus
#  #W                Current window name #ie tabname
#  ##                A literal ‘#’

#scrolling and cursor reset
#smcup@ and rmcup@ allows to scroll (they prevent the terminal to restore to the previous point) [not really needed now that tmux support the mouse]; Cr (cursor reset) is not implemented in xfce-terminal so it bugs (it is \e112\a)
#set -ga terminal-overrides ",xterm*:XT:smcup@:rmcup@:Cr@"
set -ga terminal-overrides ",xterm*:Cr@"
# most 256 color terminals actually support true color, but this is not
# exported in their terminfo; override this
set -ga terminal-overrides ",*256col*:Tc"

## Bindings

#C-q prefix
unbind C-b
set -g prefix C-q
bind C-q send-prefix

#urxvt tab like window switching (-n: no prior escape seq)
bind -n C-S-down new-window
bind -n S-left prev
bind -n S-right next
bind -n C-left swap-window -t -1
bind -n C-right swap-window -t +1

## vi style bindings, from /usr/share/tmux/vim-keys.conf
# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind s split-window -v #overwrite xchoose-tree
bind v split-window -h
# move around panes with hjkl, as one would in vim after pressing ctrl-w
bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R
# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind -r < resize-pane -L 1
bind -r > resize-pane -R 1
bind -r - resize-pane -D 1
bind -r + resize-pane -U 1
# bind : to command-prompt like vim (this is the default in tmux already)
#bind : command-prompt
#bind-key -t vi-choice  l tree-expand
#bind-key -t vi-choice  h tree-collapse
# vi-style controls for copy mode
setw -g mode-keys vi

bind-key F1 select-layout even-horizontal
bind-key F2 select-layout even-vertical
bind-key F3 select-layout main-horizontal
bind-key F4 select-layout main-vertical
bind-key F5 select-layout tiled

bind-key R source-file ~/.tmux.conf \; display-message "source-file done"
bind-key t choose-tree
bind-key T clock-mode

bind-key I setw allow-rename off \; command-prompt -I '#W' "rename-window '%%'"
bind-key O setw allow-rename on

# Pipe pane to log file
bind-key P pipe-pane -o "cat >>$HOME/var/log/tmux.#I-#P.log" \; display-message "Toggled logging to $HOME/var/log/tmux.#I-#P.log"
# Show url in buffer
#bind C-o run-shell "open $(tmux show-buffer)"
bind-key u capture-pane \; save-buffer /tmp/tmux-buffer \; run-shell "$TERMINAL -e urlview /tmp/tmux-buffer"

#b: select window, B: select session
bind b split-window "tmux lsw | percol --initial-index $(tmux lsw | awk '/active.$/ {print NR-1}') | cut -d':' -f 1 | xargs tmux select-window -t"
bind B split-window "tmux ls | percol --initial-index $(tmux ls | awk '/attached.$/ {print NR-1}') | cut -d':' -f 1 | xargs tmux switch-client -t"
