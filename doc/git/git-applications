# vim: foldmethod=marker
 
x http://jonas.nitro.dk/tig/ #ncurses git mode
x https://github.com/dankeder/git-rebranch #rebase branch according to layout
x https://github.com/trast/tbdiff.git #topic branch diff
x https://github.com/aspiers/git-config/blob/master/README.md #set of git utilities
x https://github.com/MarkLodato/git-reparent #changer les parents d'un commit
x http://rtyley.github.com/bfg-repo-cleaner/ #commme filter-branch, en plus rapide pour ce qu'il fait (effacer des fichiers/du texte)
- http://gitslave.sourceforge.net/ #pour gerer plusieurs repertoires git esclaves avec les memes commandes
- https://github.com/operasoftware/git-splitter #comme git-subtree en plus rÃ©cent (bof...)
! https://github.com/bup #backup
! https://github.com/greenrd/topgit  #patch manager, last version
x https://github.com/webmat/git_remote_branch #publishing a branch
+ https://github.com/nvie/gitflow #a workflow helper
- https://github.com/mhagger/git-multimail #improved mail post-commit hook (in contrib now)
- https://github.com/git-deploy #deploying an application
- https://github.com/tijn/git-wiki #git wiki 
+ https://github.com/jeffWelling/ticgit # bug tracker
+ https://github.com/SethRobertson/git-what-branch #Discover what branch a particular commit was made on or near
! http://gitstats.sourceforge.net/ #stats...
- jekyll: https://github.com/mojombo/jekyll (static site generator)
  -> http://octopress.org/
- git gui: git-cola (a qt version of git-gui), git-dag (a qt version of gitk)
x https://github.com/visionmedia/git-extras: some extra cmds for git
x https://github.com/joe42/git_treemap: visualize a git repo
- https://github.com/masukomi/git_accessories 
- http://git-wt-commit.rubyforge.org/ dotfiles
- https://github.com/mloughran/git-cleanup: clean up remote branches
-------

- git://github.com/cypher/dotfiles.git
- https://github.com/garybernhardt/dotfiles/blob/master/.gitconfig

github integration:
------------------

! https://github.com/defunkt/hub
Examples {{{1

hub init -g: add a remote to git hub
hub create ploum -d 'It shall be mine, all mine!'
  create the repo ploum on git hub with description blabla and add the corresponding remote

hub clone/remote add/fetch ploum/plam
  will use the repo from git://github.com/ploum/plam.git
hub clone ploum
  will do the same for YOUR_USER/ploum
hub fetch/remote add ploum
  will do the same for ploum/CURRENT_REPO
(hub submodule marche aussi)

hub push origin,staging,qa bert_timeout
  push bert_timeout to origin, staging and qa

hub cherry-pick http://github.com/mislav/REPO/commit/SHA
hub cherry-pick mislav@SHA (use REPO=CURRENT_REPO)
hub checkout https://github.com/defunkt/hub/pull/73 custom-branch-name
hub am, hub apply, hub merge can also take a github url
hub fork: fork the current repo into github

hub pull-request:
  # while on a topic branch called "feature":
  $ hub pull-request
  [ opens text editor to edit title & body for the request ]
  [ opened pull request on GitHub for "YOUR_USER:feature" ]
  # explicit title, pull base & head:
  $ hub pull-request "I've implemented feature X" -b defunkt:master -h mislav:feature
  $ hub pull-request -i 123
  [ attached pull request to issue #123 ]

$ hub browse
> open https://github.com/YOUR_USER/CURRENT_REPO
$ hub browse -- commit/SHA
> open https://github.com/YOUR_USER/CURRENT_REPO/commit/SHA
$ hub browse -- issues
> open https://github.com/YOUR_USER/CURRENT_REPO/issues
$ hub browse schacon/ticgit commit/SHA
> open https://github.com/schacon/ticgit/commit/SHA

$ hub compare refactor
> open https://github.com/CURRENT_REPO/compare/refactor
$ hub compare -u fix #get url
> (https://github.com/CURRENT_REPO/compare/fix)
$ hub compare 1.0..1.1
> open https://github.com/CURRENT_REPO/compare/1.0...1.1
$ hub compare other-user patch
> open https://github.com/other-user/REPO/compare/patch
}}}

- https://github.com/defunkt/gist
! https://github.com/ConradIrwin/jist #an updated gist gem
jist -h, en gros: 
jist -p -o ploum.rb: fait un jist de ploum.rb, -p pour le rendre public et -o pour l'ouvrir dans le navigateur

(Legend: - already seen, x to see, ! installed, + look promising, look
again in some future time)

####
Docs:
-----
http://steveko.wordpress.com/2012/02/24/10-things-i-hate-about-git/
  Great diagrams of svn and git workflow

http://sitaramc.github.com/1-basic-usage/gitk.html
  gitk
