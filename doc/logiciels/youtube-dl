https://github.com/ytdl-org/youtube-dl/blob/master/README.md

-F, --list-formats               List all available formats of requested videos
-f, --format FORMAT              Video format code, see the "FORMAT
                                 SELECTION" for all the info

--write-sub                      Write subtitle file

Post-processing:
    -x, --extract-audio              Convert video files to audio-only files
                                     (requires ffmpeg or avconv and ffprobe or
                                     avprobe)
    --audio-format FORMAT            Specify audio format: "best", "aac",
                                     "flac", "mp3", "m4a", "opus", "vorbis", or
                                     "wav"; "best" by default; No effect without
                                     -x

FORMAT SELECTION

By default youtube-dl tries to download the best available quality, i.e. if you want the best quality you don't need to pass any special options, youtube-dl will guess it for you by default.

  - best: Select the best quality format represented by a single file with video and audio.
  - worst: Select the worst quality format represented by a single file with video and audio.
  - bestvideo: Select the best quality video-only format (e.g. DASH video). May not be available.
  - worstvideo: Select the worst quality video-only format. May not be available.
  - bestaudio: Select the best quality audio only-format. May not be available.
  - worstaudio: Select the worst quality audio only-format. May not be available.

* Exemples:
- https://unix.stackexchange.com/questions/230481/how-to-download-portion-of-video-with-youtube-dl-command
  => Use youtube-dl -g "URL" to get the video and audio streams.
     ffmpeg -ss 12:15 -i "1st-URL" -ss 12:15 -i "2nd-URL" -t 5:15 -map 0:v -map 1:a -c:v libx264 -c:a aac output.mkv
     (note that usualy there is only one url, but high res videos have
     different video and audio streams)
     Shortcut for 2 urls:
     ffmpeg $(youtube-dl -g 'https://www.youtube.com/watch?v=oHg5SJYRHA0' | sed "s/.*/-ss 00:05 -i &/") -t 01:00 -c copy out.mkv

  => https://github.com/ytdl-org/youtube-dl/issues/622
     ffmpeg -ss 3:59:10 -i $(youtube-dl -f 22 -g 'https://www.youtube.com/watch?v=mMZriSvaVP8') -t 3:06:40 -c copy react-spot.mp4

  => to copy the sound:
  url=$(youtube-dl -f worstaudio -g ...)
  ffmpeg  -i $url -c:a copy -to 1:00:00 foo.opus
