# Active Model -- model interfaces for Rails (M)

Active Model provides a known set of interfaces for usage in model classes.
They allow for Action Pack helpers to interact with non-Active Record
models, for example. Active Model also helps with building custom ORMs for
use outside of the Rails framework.

-> Active Record -- Object-relational mapping in Rails

# Action View (V)

Action View is a framework for handling view template lookup and rendering,
and provides view helpers that assist when building HTML forms, Atom feeds
and more. Template formats that Action View handles are ERB (embedded Ruby,
typically used to inline short Ruby snippets inside HTML), and XML Builder.

# Action Pack -- From request to response (C)

Action Pack is a framework for handling and responding to web requests. It
provides mechanisms for *routing* (mapping request URLs to actions), defining
*controllers* that implement actions, and generating responses by rendering
*views*, which are templates of various formats. In short, Action Pack
provides the view and controller layers in the MVC paradigm.

- Action Dispatch, which parses information about the web request, handles
  routing as defined by the user, and does advanced processing related to
  HTTP such as MIME-type negotiation, decoding parameters in POST, PATCH,
  or PUT bodies, handling HTTP caching logic, cookies and sessions.

- Action Controller, which provides a base controller class that can be
  subclassed to implement filters and actions to handle requests. The result
  of an action is typically content generated from views.

# Railties -- Gluing the Engine to the Rails

Railties is responsible for gluing all frameworks together. Overall, it:
- handles the bootstrapping process for a Rails application;
- manages the +rails+ command line interface;
- and provides the Rails generators core.

# Helpers:

- Active Support -- Utility classes and Ruby extensions from Rails
- Active Job -- Make work happen later
- Action Mailer -- Easy email delivery and testing
- Rails::Dom::Testing
  This gem is responsible for comparing HTML doms and asserting that DOM elements are present in Rails applications.
  + Rails Html Sanitizers
  In Rails 5 this gem will be responsible for sanitizing HTML fragments in Rails applications, i.e. in the `sanitize`, `sanitize_css`, `strip_tags` and `strip_links` methods.
- bundler
- sprockets-rails

# Gemfile:
In Gemfile generated by 'rails new foo'

gem 'rails', '4.2.0'
gem 'sqlite3'
gem 'sass-rails', '~> 5.0'
gem 'uglifier', '>= 1.3.0'
gem 'coffee-rails', '~> 4.1.0'
gem 'jquery-rails'
gem 'turbolinks'
gem 'jbuilder', '~> 2.0'
gem 'sdoc', '~> 0.4.0', group: :doc
group :development, :test do
  gem 'byebug'
  gem 'web-console', '~> 2.0'
  gem 'spring'
end

-> packages used in standard rails bundle:
rails coffee-rails jquery-rails sprockets-rails sass-rails jbuilder sdoc spring sqlite3 turbolinks web-console uglifier

- coffee-script: #compiling coffee script
    coffee-script-source #source in js
    execjs #js interpreter
      ExecJS supports these runtimes:
      - therubyracer - Google V8 embedded within Ruby
        gem install therubyracer
        require 'v8'
      - therubyrhino - Mozilla Rhino embedded within JRuby
      - Node.js
      - Apple JavaScriptCore - Included with Mac OS X
      - Microsoft Windows Script Host (JScript)
- jbuilder: Jbuilder gives you a simple DSL for declaring JSON structures
- multi_json: MultiJSON will simply choose the fastest available JSON coder
- spring: Spring is a Rails application preloader
- sprockets: Sprockets is a Ruby library for compiling and serving web assets.
- web-console: _Web Console_ is a debugging tool for your Ruby on Rails applications.
- uglifier: compressor for js assets

-> Resolving dependencies...
Using rake 10.4.2
Using i18n 0.7.0
Using json 1.8.2
Using minitest 5.5.1
Using thread_safe 0.3.4
Using tzinfo 1.2.2
Using activesupport 4.2.0
Using builder 3.2.2
Using erubis 2.7.0
Using mini_portile 0.6.2
Using nokogiri 1.6.6.2
Using rails-deprecated_sanitizer 1.0.3
Using rails-dom-testing 1.0.5
Using loofah 2.0.1
Using rails-html-sanitizer 1.0.1
Using actionview 4.2.0
Using rack 1.6.0
Using rack-test 0.6.3
Using actionpack 4.2.0
Using globalid 0.3.3
Using activejob 4.2.0
Using mime-types 2.4.3
Using mail 2.6.3
Using actionmailer 4.2.0
Using activemodel 4.2.0
Using arel 6.0.0
Using activerecord 4.2.0
Using debug_inspector 0.0.2
Using binding_of_caller 0.7.2
Using bundler 1.8.3
Using columnize 0.9.0
Using debugger-linecache 1.2.0
Using slop 3.6.0
Using byebug 3.5.1
Installing coffee-script-source 1.9.1
Installing execjs 2.4.0
Installing coffee-script 2.3.0
Using thor 0.19.1
Using railties 4.2.0
Installing coffee-rails 4.1.0
Using hike 1.2.3
Installing multi_json 1.11.0
Installing jbuilder 2.2.11
Installing jquery-rails 4.0.3
Using tilt 1.4.1
Using sprockets 2.12.3
Using sprockets-rails 2.2.4
Using rails 4.2.0
Using rdoc 4.2.0
Using sass 3.4.13
Installing sass-rails 5.0.1
Using sdoc 0.4.1
Installing spring 1.3.3
Installing sqlite3 1.3.10
Installing turbolinks 2.5.3
Installing uglifier 2.7.1
Installing web-console 2.1.1
