#!/usr/bin/env ruby

require 'slop'
puts Slop::VERSION
opts = Slop::Options.new
opts.banner = "usage: connect [options] ..."
opts.separator ""
opts.separator "Connection options:"
opts.string "-H", "--hostname", "a hostname"
opts.int "-p", "--port", "a port", default: 80
opts.separator ""
opts.separator "Extra options:"
opts.array "--files", "a list of files to import"
opts.bool "-v", "--verbose", "enable verbose mode"
opts.string "--test", "a test" do |v|
	puts "v: #{v}"
end

parser = Slop::Parser.new(opts)
result = parser.parse(["--hostname", "192.168.0.1","foo"])

p result.to_hash #=> { hostname: "192.168.0.1", port: 80,
                 #     files: [], verbose: false }

p result.args

puts opts # prints out help

r2=parser.parse(ARGV)
p r2.to_hash
p r2.args

#Bugs: $0 --hostname=foo do set up the hostname but let it in the argument
#array instead of removing it. $0 --verbose=false does not work (set
#verbose to true). There is no way to have an optional option like in
#optparse, ie --foo => foo=true, --foo=bar => foo=bar

## Shortcut:
#opts = Slop.parse do |o|
#  o.string '-h', '--host', 'a hostname'
#  o.integer '--port', 'custom port', default: 80
#  o.bool '-v', '--verbose', 'enable verbose mode'
#  o.bool '-q', '--quiet', 'suppress output (quiet mode)'
#  o.on '--version', 'print the version' do
#    puts Slop::VERSION
#    exit
#  end
#end
