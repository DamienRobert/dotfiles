in représente la machine subissant le firewall
out la machine à laquelle on veut se connecter
middle la machine par laquelle on va passer


Pour se connecter malgré les firewall:

1) quatra2.ens.fr:443 pointe sur quatramaran.ens.fr:22

or le port 443 est le port ssl (https), donc il y a des chances que ce
soit ouvert.

2) encapsuler dans du ssh

* in -> out:

sur in:
ssh -N -L port_in:out:port_out middle

pour que se connecter sur localhost:port_in renvoie sur out:port_out en
passant par l'encapsulation ssh de in->middle

* out -> in -> in2:
(ex: seul in peut voir in2)

ssh -N -R middle_port:in2:in2_port

pour que se connecter sur  middle:middle_port renvoie sur in2:in2 en
passant par l'encapsulation ssh de middle -> in

3) encapsuler dans du http
installer httptunnel sur in et middle

sur in:
htc [-P proxy:80] -F port_in middle 8080

redirige le port port_in vers middle:8080 avec une encapsulation http
(qui peut passer par le proxy proxy:80 avec l'option -P)

sur middle:
hts -F out:port_out 8080
desencapsule l'http reçu sur le port 8080 et l'envoie sur out:port_out


4) sur une machine où on ne peut rien installer
utiliser mindterm
http://quatramaran.ens.fr/~noilhan/mindterm/

5) faire du tunneling tcp (fordward.pl: mon script perl) ou
   tcp/udp (socat):
   [socat est 1000 fois mieux, mais mon script perl marche sous windows]

* in -> out:

sur in: 
socat -d -d \
    TCP4-LISTEN:port_in,bind=myaddr1,su=nobody,fork,range=10.0.0.0/8,reuseaddr \
    TCP4:middle:port_middle,bind=myaddr2
[les options ne sont pas vraiment nécessaires, c'est juste pour montrer
les possibilités de controler plus finement ce truc]

puis pareil sur middle pour rediriger port_middle sur port_out:
socat -d -d \
    TCP4-LISTEN:port_middle,su=nobody,fork,range=10.0.0.0/8,reuseaddr \
    TCP4:out:port_out


* out -> in -> in2
(si in peut voir middle, mais pas réciproquement):

sur middle:
socat -d -d \
    TCP4-LISTEN:port_in,bind=myaddr1,su=nobody,fork,range=10.0.0.0/8,reuseaddr \
    TCP4-LISTEN:port_out, blablabla

sur in:
socat -d -d \
    TCP:middle:port_in,bind=myaddr1 \
    TCP4:in2:port_in2,bind=myaddr2


6) encapsuler dans du ssl
man stunnel
(je connais pas encore les options)

7) utiliser socks (via une encapsulation ssh)
ssh -D 
 -D port
             Specifies a local “dynamic” application-level port forwarding.
             This works by allocating a socket to listen to port on the local
             side, and whenever a connection is made to this port, the connec‐
             tion is forwarded over the secure channel, and the application
             protocol is then used to determine where to connect to from the
             remote machine.  Currently the SOCKS4 and SOCKS5 protocols are
             supported, and ssh will act as a SOCKS server.  Only root can
             forward privileged ports.  Dynamic port forwardings can also be
             specified in the configuration file.
 
 Proxy socks: tsocks
