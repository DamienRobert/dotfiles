vim: ft=markdownlight fdm=expr

Tools
=====

* Configuration manager: chef, puppet, salt, ansible
* VPS: Digital Ocean, RamNode, OVH, LunaNode
Integration continue: travis (github), jenkins

* Non root containers:
- patchelf https://nixos.org/patchelf.html
  PatchELF is a small utility to modify the dynamic linker and RPATH of ELF executables.
- https://proot-me.github.io/
  PRoot is a user-space implementation of chroot, mount --bind, and binfmt_misc.
  (uses ptrace)
  -> used by junest: The lightweight Arch Linux based distro that runs upon any Linux distros without root access.
- mbox: http://pdos.csail.mit.edu/mbox/
  Mbox is a lightweight sandboxing mechanism that any user can use without special privileges in commodity operating systems.

X forwarding
============

Xephyr: version moderne de Xnest, supportant les extensions X modernes

Protocols: nx, rdp (windows), vnc
  ssh -X/ssh -Y

xpra: rootless (ie la fenêtre s'affiche dans le wm hote) + winswitch (gui helper)

Remmina, vinagre, tigervnc, tightvnc, x2go
  https://en.wikipedia.org/wiki/Comparison_of_remote_desktop_software
  http://www.techradar.com/news/5-of-the-best-linux-remote-desktop-clients

Containers
==========

* Containers:
- libvirt-lxc, lxc
- systemd-nspawn/machinectl
  casync: Content-Addressable Data Synchronization Tool http://0pointer.net/blog/casync-a-tool-for-distributing-file-system-images.html 
  mkosi: create legacy-free OS images
- docker / rkt / runC / podman
  singularity: "docker for hpc"
- chef/habitat: https://medium.com/@bdangit/habitat-and-docker-c8b19d7e5d8c
  Build applications to run anywhere and manage them throughout their lifecycle.
  Habitat is open source software that creates platform-independent build artifacts and provides built-in deployment and management capabilities.
  A modern version of omnibus, cf https://discourse.chef.io/t/habitat-vs-omnibus/12983/3

* Containers orchestration:
  - kubernetes
    https://jvns.ca/blog/2017/10/10/operating-a-kubernetes-network/
    https://jvns.ca/blog/2017/10/05/reasons-kubernetes-is-cool/
    https://www.reddit.com/r/kubernetes/comments/7y54n6/deploying_the_control_plane_kubelet_manifests_vs/ -> https://github.com/kelseyhightower/kubernetes-the-hard-way
    video: https://www.driftingruby.com/episodes/introduction-to-kubernetes
  - https://helm.sh/
    The package manager for Kubernetes
    Helm is the best way to find, share, and use software built for Kubernetes.
  - openshift: red hat distribution for kubernetes

Depuis que CoreOs a été racheté par redhat, rkt est deprecated.

Architecture de docker:
-----------------------
- https://blog.osones.com/le-point-sur-les-container-runtimes.html
- https://coreos.com/rkt/docs/latest/rkt-vs-other-projects.html

Docker:
 -> dockerd: high level demon
 -> containerd: low level demon: construit l'image container image (par exemple peut utiliser overlayfs)
 -> runC: low level command to run the container
 The Docker daemon prepares the image as an Open Container Image (OCI) bundle and makes an API call to containerd to start the OCI bundle. containerd then starts the container using runC.

=> CRI: kubernetes a une api 'CRI' = container runtime interface pour s'intégrer
à des container. Il peut utiliser dockerd (via docker-shim) ou parler
directement à containerd:
https://kubernetes.io/blog/2018/05/24/kubernetes-containerd-integration-goes-ga/

=> D'autres implémentations plus légères du CRI:
   - cri-o https://cri-o.io/ Lightweight Container Runtime for Kubernetes
   - podman: https://podman.io/ Interface cli pour gérer les images containers
           = alternative au cli docker
           (ie cri-o est utilisé directement par kubernetes, podman est
           pour lancer un container en ligne de commande sans kubernetes)
   - buildah: https://buildah.io/ build container images
   => Intégrés sous openshift: https://www.openshift.com

Références on cri-o/podman:
- https://jvns.ca/blog/2016/10/02/i-just-want-to-run-a-container/ Nice but a bit old summary
- https://www.infoq.com/articles/container-runtimes-kubernetes Runtime for kubernetes
- https://www.reddit.com/r/kubernetes/comments/9y89wu/a_comparison_of_container_runtimes/ Nice discussion
- https://kubic.opensuse.org/blog/2018-03-25-podman/ Quick overview of podman
- https://developers.redhat.com/blog/2019/02/21/podman-and-buildah-for-docker-users/ Longer overview of podman and buildah
- https://blog.openshift.com/crictl-vs-podman/ Nice graphs explaning the different roles of cri-o vs podman
- https://discussion.fedoraproject.org/t/what-does-fedora-coreos-mean-for-fedora-and-rkt/78/7 Features from rkt (systemd/machinectl integration) missing from podman

Virtual box
===========

openstack: le cloud open source

* Virtual: hashicorp/vagrant
  To achieve its magic, Vagrant stands on the shoulders of giants. Machines are provisioned on top of VirtualBox, VMware, AWS, or any other provider. Then, industry-standard provisioning tools such as shell scripts, Chef, or Puppet, can be used to automatically install and configure software on the machine.

* Provision:
  - hashicorp/terraform => Infrastructure as code
  - hashicorp/packer => build virtual machines
    https://github.com/elasticdog/packer-arch: un packer pour archlinux
  - https://pulumi.io/
     Cloud Native Infrastructure as Code
     Build software for any cloud using your favorite language. 
     https://pulumi.io/reference/vs/terraform.html

binary packagers
================

- snap (ubuntu), flatpak (was xdg-app),  guix/nix, 0install, slackware build tools, gentoo (https://wiki.gentoo.org/wiki/Project:Prefix), Suse open build service...
cf https://www.reddit.com/r/linux/comments/4ohvur/nix_vs_snap_vs_flatpak_what_are_the_differences/, https://github.com/probonopd/AppImageKit/wiki/Similar-projects
- bubblewrap: bubblewrap is a lightweight setuid sandbox application developed from Flatpak (=used by flatpak to run in a sandbox); firejail: another sandbox
- Containers: lxc, systemd-nspawn, docker, flatpak, bubblewrap, firejail

Note: flatpak uses libostree, cf https://ostree.readthedocs.io/en/latest/

* guix https://www.gnu.org/software/guix/
  can build pack and docker images: https://guix-hpc.bordeaux.inria.fr/blog/2017/10/using-guix-without-being-root/
