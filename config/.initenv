# vim: filetype=sh:

if [ -z "$_INITENV" ]; then
  _INITENV="true";
  export _INITENV

MYFILES="$HOME/mine/config"
[ -e $MYFILES/.initlog ] && . $MYFILES/.initlog

mylog "session" "initenv ($0 $@)"

###### HOSTTYPE #####
MYHOSTNAME=none
MYHOSTTYPE=none
MYHOSTFILE="$MYFILES/hosttype.local"
HOSTNAME="$HOST"
[ -z "$HOSTNAME" ] && HOSTNAME=`hostname`

[ -f "$MYHOSTFILE" ] && . "$MYHOSTFILE"

MYTMP=/var/tmp
MYTMPFS=/tmp
[ -d "$HOME/tmp" ] && MYTMP="$HOME/tmp"
[ -d "/run/user/`id -u`" ] && MYTMPFS="/run/user/`id -u`"

[ -z "$UID" ] && UID=`id -u`

export MYHOSTNAME MYHOSTTYPE HOSTNAME MYFILES UID
export MYTMP MYTMPFS

######  Reglages locaux ######
if [ "x$MYHOSTTYPE" != "xnone" ]; then
  #don't want zsh to look at it when i have a gtk indicator
  MAILPATH="$HOME/Mail"
  MAIL="$MAILPATH/Inbox"
  export MAIL MAILPATH
fi

if [ "x$MYHOSTTYPE" = "xperso" ]; then
  #PATH="/usr/local/util/bin:/usr/local/games/bin:/usr/sbin:/sbin:$PATH"
  
  if [ -z $TZ ]; then
  TZ="Europe/Paris"
  #TZ="America/Edmonton"
  #TZ="Pacific/Honolulu"
  #TZ="Europe/Moscow"
  #TZ="America/Los_Angeles"
  fi

  MPD_HOST="/run/user/$UID/mpd_sock"
  export MPD_HOST TZ
fi
if [ "x$MYHOSTTYPE" = "xphare" ]; then
  PATH="/usr/local/sbin:/usr/sbin:/sbin:$PATH"
fi

################### PATH ##################
#le path commun à toutes mes configs
GEM_HOME="$HOME/var/rubygems" #ruby
PATH="$HOME/bin:$HOME/mine/bin:$HOME/opt/bin:$HOME/mine/bin/localrubygems/:$GEM_HOME/bin:"\
"$PATH"
MANPATH="$HOME/opt/man/:$HOME/opt/man/texlive/:"
INFOPATH="$HOME/opt/info/:$HOME/opt/info/texlive/:"
# terminer par un colon rajoute le manpath genere par manpath
export PATH MANPATH INFOPATH

###### i18n #####
if [ -z "$SSH_CLIENT" -o -z "$LC_CTYPE" ]; then
. "$HOME/.i18n"
fi
[ -f "$HOME/.xinput.d/default.local" ] && . "$HOME/.xinput.d/default.local"

################ ENV VARS ###############
#RUBYLIB="$HOME/opt/ruby/lib:"
RUBYLIB="$HOME/mine/ruby/lib:"
TEXMFCNF=$HOME/latex/texmf/texmf-config/web2c: #TEX
#SVDIR="$HOME/services/" #runit
#XML_CATALOG_FILES="$HOME/FichiersConfig/xml/catalog /etc/xml/catalog"
BIBTEX=bibtex
#PERL5LIB="$HOME/opt/perl/lib/perl5:$HOME/opt/perl/lib:"
# contourner un bug dans flash. Plus besoin (cf forum: informatique.internet: 5984)
#GDK_NATIVE_WINDOWS=true
#bibtex8 est mieux que bibtex Mais est plus strict #BIBTEX=bibtex8
CPATH="$HOME/opt/include/:$CPATH"
LD_LIBRARY_PATH="$HOME/opt/lib/:$LD_LIBRARY_PATH"
export GEM_HOME RUBYLIB TEXMFCNF BIBTEX CPATH LD_LIBRARY_PATH #PERL5LIB

SHELL=`which zsh`
EDITOR="$HOME/script/vi"
PAGER=`which less`
DICTIONARY=francais
VISUAL="$HOME/script/gvi -f"
SUDO_EDITOR="$EDITOR" #otherwise sudo use VISUAL
LESS="-RMiq" # Options de less: -q:bell visuelle, -i: ignore case pour les search, -M: long prompt, -R: interpret ansi color code
# rmq, si LESS n'est pas spécifié, dans git LESS est mis à FSRX.
# -F: quit less  if content can fit on one screen
# -X: Disables sending the termcap initialization and deinitialization strings  to  the  terminal.
# -S: chop long line
# #VISUAL=`which gvim`
export SHELL EDITOR VISUAL PAGER LESS DICTIONARY SUDO_EDITOR 

## Stuff started by systemd ##
case $MYHOSTTYPE in
  perso) 
    #export DBUS_SESSION_BUS_ADDRESS="unix:abstract=/run/user/$UID/dbus_session_bus"
    [ -z "$SSH_AUTH_SOCK" ] && export SSH_AUTH_SOCK="${XDG_RUNTIME_DIR:-/run/user/${UID:-$(id -u)}}/ssh_auth_sock"

    #[ -z "$GPG_AGENT_INFO" ] && export GPG_AGENT_INFO="$HOME/.gpg/S.gpg-agent:0:1"
    ;;
  imb) PATH="$HOME/opt/bin/texlive:$PATH"
    ;;
esac

#pour les réglages locaux temporaires, je ne veux pas modifier initenv pour ça
[ -f "$MYFILES/.initenv.local" ] && . "$MYFILES/.initenv.local";

else
  mylog "session" "initenv already read"
fi
