#!/bin/zsh

. "$DOTFILES/.initvars"
. $CFGFILES/.dolink
CFGFILESNAME="${CFGFILES#$HOME/}"
DOTFILESNAME="${DOTFILES#$HOME/}"

squel=(.mplayer .mpv .ncmpcpp .mpd .config .gem .local)
linklocal=(.procmailrc)

FORCE=
while true;
do
	case "$1" in
		-- ) shift; break ;;
		-f|--force ) shift; FORCE=t; shift ;;
		*) break;;
	esac
done

eval $($MYFILES/00COMPUTERS.rb --export)
#the order is as follow: set MYHOST* by arguments, otherwise by
#00COMPUTERS.rb, otherwise by .initvars which reads hosttype.local
[[ -z $COMPUTER[hostname] ]] && MYHOSTNAME=$COMPUTER[hostname]
[[ -z $COMPUTER[hosttype] ]] && MYHOSTTYPE=$COMPUTER[hosttype]
MYHOSTNAME=${1-$MYHOSTNAME}
MYHOSTTYPE=${2-$MYHOSTTYPE}
export MYFILES CFGFILES CFGFILESNAME DOTFILESNAME
export MYHOSTNAME MYHOSTTYPE

echo "MYHOSTNAME=$MYHOSTNAME
MYHOSTTYPE=$MYHOSTTYPE" > $MYHOSTFILE
echo "Updating config files for $MYHOSTNAME with type $MYHOSTTYPE"

cd $HOME

local_link() {
	file=$1
	for type in "-$MYHOSTNAME" "-$MYHOSTTYPE" ""; do
		target="$CFGFILESNAME/generate/local/$file$type"
		if [[ -f $target ]]; then
			do_link $target $file
			break
		fi
	done
}

copy() {
	~/mine/progs/linkutils/install_package -a -s $DOTFILES $1 $HOME -q ${FORCE:+-f}
}

echo "# Squel: $squel"
for i in $squel; do
	if [[ -e "$DOTFILESNAME/$i" ]]; then
		copy "$DOTFILESNAME/$i";
	fi
done

if [[ -n $FORCE ]]; then
	DOLINK_FORCE=t
fi
echo "# Dotfiles"
for i in $DOTFILESNAME/{*,.*}(N); do
	[[ -n ${(M)squel:#$(basename $i)} ]] || {
		do_link $i
	}
done

echo "# Local symlinks"
#need to put it after squel in case we link to a directory there
for i in $linklocal; do
	local_link $i;
done

echo "# Generation"
for i in $CFGFILES/generate/*; do
	[[ -f $i && -x $i ]] && $i
done
eval $($MYFILES/00COMPUTERS.rb --export=config)
for prog in $CONFIG; do
	i="$CFGFILES/generate/extra/$prog"
	[[ -f $i && -x $i ]] && $i
done

echo "# Checkup"
for i in $CFGFILES/generate/after/*; do
	[[ -f $i && -x $i ]] && $i
done

[[ -e ~/.ssh/authorized_keys ]] || echo "!! ~/.ssh/authorized keys does not exist!"
